name: 'Build Android app'

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./android
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run Yarn Install
        run: |
          npm i -g corepack
          yarn install
      - name: Build application
        run: |
          ./gradlew assembleRelease

      - name: Upload application
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: ${{github.workspace}}/android/app/release/app-release.apk
          retention-days: 30
          if-no-files-found: error

  release-project:
    name: Release project
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: app-release
      - name: Achive artifact
        uses: thedoctor0/zip-release@master
        with:
          filename: app-release.zip

      - name: Create github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release.zip
          asset_name: app-release.zip
          asset_content_type: application/zip
